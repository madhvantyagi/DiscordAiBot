Okay. Let's get started. Can everybody see my Word document and my SQL window? Yes. Great. Okay. So the objective for today is let's do some administrative items before we get started. So just a reminder, we have an exam coming up on next Monday, which is on November 20th. So Monday, November 20th, we have exam two. It's going to be on the topics that we discussed. This is the last exam. So we have relational algebra, we have SQL, backup and recovery, concurrency. What I wanted to do today was begin doing a review of SQL just to get ourselves back on track for that. Before we get started, anybody have any questions about the second project? So we can discuss together or we can discuss after class. I have a quick question. What's up? Is it just like how project one where the deadline is not strictly at 12 o'clock? Can we hand it in at 3 AM to do some quick fixes? Well, it'll be late. Okay. Thank you. Because I remember the last project you had said there was no penalty if it was a little bit past 12. Well, I mean, if it's like 12.05 or 12.15. But if it's the next day, it's late. Thank you. Anybody have any other questions about the project that we could discuss? So if not, I'll stick around after class. People have questions or we can go into a breakout session. I had a quick question about the query that you asked about. Can you identify the number of bytes sent and received? I think it was query three. So if we ended up inputting that at too few bytes, like 150, you said to output in gigabytes, right? So when you divide 10 to the ninth, it turns it like it just shows a zero. So are we allowed to use the format command to increase the decimal precision? Like if I want to show 10 decimal places, is that allowed? So this is the question to identify how many bytes sent and received. So you're saying, you know, can you â€“ if you display it in gigabytes, can you just use like many decimal points? Is that what you're saying? Yeah. Yeah, it's up to you as to like what unit that you want to do it in. Do you want like some, you know, cell phone bills, they do it in kilobytes. They do it in megabytes. So whatever is a good format for you. I just say just keep it consistent. And so it's formatted good. Okay. Okay. Okay. So just a reminder, so we have our second exam next Monday, which is November 20th, okay? And we'll do a review, you know, today we'll do a review on Wednesday. So in order to kick that off, what I wanted to do was create a database from scratch from the beginning using the design and normalization and implementing it in SQL, like utilizing all the operations, okay? So one way of like learning databases is just to create many, many, many databases, okay? And this, you know, works better obviously if you, you know, do this on your own, you know, rather than watch me. But I'm just walking through the, you know, the principles of step one through step, you know, to the end in terms of how to create, okay? So what I wanted to create was a more complicated database, okay? So one of the next level up database that's a little bit more complicated is to make a, you know, airline reservation system, okay? So we're going to collectively identify what we need to track in the system, and we're also going to identify some like output, okay? So this is the information that we need to track. So what an airline reservation system. So what are your thoughts? Keep it on the high level in terms of entities. What do we want to keep track of? Flights, passengers. Okay, so we have flight, passengers. What else? Seating arrangements. Okay, so we also have the seating, so you have a reservation, and your reservation is for a seat on a plane. Keep going. There's also like an airport. Okay, so you have the different airports. So just to be clear, you know, we're used to dealing with addresses. You have a branch, you have a store at 1414 Main Street. You know, planes don't land at 1414 Main Street and address. They land at very specific airports, okay? So we have our airport, you know, code. Terminal. It has a seat, okay? So you have passages. Passages make reservations, and then reservations are for flights. Okay, and then what about the flight? What are some attributes for the flight? Time. Excuse me? Time. Well, time of flight. Flight number. Okay, so like where do you want to go? Terminal. Right, so you want to know, so what is your starting point? Destination. Right, so you have your, you know, your source. And now starting airport. Destination. Airport. Then you have the, the flight is the date of the flight. Okay, so you know where the, where it's leaving. You know where it's going. You know the, the date, okay? And then the flight is going to obviously involve some type of, so we have airport, reservation, passages. What else do we need? Right now the plane is flying on like autopilot. What do we need? Staff. Right, so we need staff. Okay. And then what else? Flight number. Excuse me? Flight number. We need, we need planes. Yeah, so it's a Boeing number ID, I guess. Right, so you have planes. Okay, so we can't have a flight without having a plane. So each plane, if you look very carefully on the, on the tail, the back of the plane, is a, like a plane ID number. Or like a tail, a tail number, okay? So plane ID number. And then other information about the plane. Like what's the manufacturer, number of seats, et cetera. So the flight is going to be on a, you know, a specific plane, okay? Then you have passages. Who is making the reservation? Passengers. Passengers. Correct. Let's say they call it a, so customer ID. So the usual customer first, customer, you know, last. Who's making the reservation? No, customer ID, okay? So we have to look. So who is making, making relationships between the various tables? So between reservation and passengers, you have customer ID. Relationship between flights and planes, that plane, plane, plane ID and plane ID here. So what's the relationship between staff? Staff needs to be, have a relationship with what other table? Staff in airports, staff in reservations, staff in passengers, or what? Airport. Airport. So are staff assigned to airports, are staff assigned to reservations, are staff assigned to passengers, are staff assigned to planes, or what? Plane. Plane. Okay. So I need to have a relationship. Staff are assigned to planes. How should I do that? Staff ID. But where do I, where do I put it? Is it a, is it a, is it a, is it a multivalue, meaning can one staff be assigned to more than one plane? Or can one plane have more than one staff? How do you want to do this? One plane, more than one staff. Okay. So how do we keep track of one plane has many staff assigned to it? Is a staff really assigned to the plane? Or is the staff assigned to the flight? And the flight is assigned to the plane. Flight. Right. Because when staff doesn't own that, that plane like permanently, one staff can be assigned to many different planes. So how do we keep track of, you know, which staff are assigned to which flights? Okay. So what should I make my new table? Remember, I want to keep track of which staff are assigned to flights. Can you repeat the question again, please? Which staff are assigned to flights? How do I do that? I have flights. Flight is leaving LaGuardia Airport, going to California tomorrow at 9am on a Pacific plane. I need to have staff that are assigned to that flight. I think we need a flight number. Okay. So how do I keep track of which staff are assigned to which flight? Booking a reservation confirmation. When you make a reservation, you're not reserving a staff person. You're reserving a seat on a flight. How do I keep track? How do I assign these staff to the flights? You can create staff assignment. So what are some attributes for staff flight? Flight ID and staff ID. Flight ID. Okay. So now I can keep track of this flight number will be assigned to this staff. Okay. And what else here? So flight number. Flight ID. Staff ID. So this flight over here needs to be a flight number. Okay. And this, I'm making a reservation for what? Is this a flight number? Okay. And this, I'm making a reservation for what? It needs to be what? What do I need to have? What's the argument for taking this off? There are many planes, like different type of airlines or planes. So it's not like, it's not solely representative of a reservation. When you make a reservation, you're reserving, it's the flight number. The flight number here connects to the flight number here. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Alright. Okay. Alright. Alright. Alright. Alright. Okay. Alright. Alright. Alright. Alright. Alright. Alright. Okay. Okay. Alright. Okay. Okay. And then we have plane ID over here. Then that connects to the plane ID over here. So, we don't need to have plane here, because we can connect the plane, through the flights in this direction. So, the flight goes from here to here and then here, we have the plane. So, simply mentioning the flight number tells you what the plane is up here. Okay. So, you have the terminal. Terminal is located at the airport code. I guess terminal name. So, terminals are located at airports. Terminals have a name and they have an ID number. And then, what do we... Terminal has a departure and arrival also. Well, I look at a terminal like terminal A at like LaGuardia airport. How about... I guess it's getting a little bit complicated here. A terminal could be where the person goes or where the plane is parked. Forget terminal, it's too complicated. Okay. So, give me some questions. What questions we have to design our system to be able to answer certain questions? What are some questions you would like to ask of this system? Or reports you want generated or analysis performed? Which flights are canceled or delayed? Okay. Don't worry about how to do it. We have to redesign the database in order to answer these questions. What are some other reports, analysis that you need to create? Number of flights. Like when? For that date, like specific date. Okay. What are some other questions? Which route has the most customer? I've got something for the customer. Reservation, like how many states are available? Do you want to know? What are some other questions you as the customer would find helpful? Lowest price. Shorter distance. Okay. These are some questions. Okay, so let's figure out. So, how do we identify if a flight has been completed, canceled, or delayed? Where do you want to track that? Is it flights? So, what can be an attribute to keep track of canceled, delayed, or completed? Excuse me. Flight status. Okay, so flight status has a domain of delays, canceled, or completed. And that would be like a single value for the flight. Okay, so that takes care of that. Identify the number of flights today at JFK Airport. So, where can we attempt to answer it? Don't worry about the actual code, but do we have the attributes to answer this question? Where do we keep track of JFK Airport? Airports. Okay, so you have airport. So, the airport code would be JFK. Okay. Flights today. Where can we find flights today? Flights, number of flights. Okay, so flights up here. So, you have date of flight up here. And then you also have like starting airport, which is the airport code. Okay. Flights with the most customers. Have you identified customers that are assigned to flights? Customers assigned to flights to answer this question. Reservation. Right. So, flight number, customer. Okay. Available flights to Disney World. Where do we keep track of where we're going, Disney World? Flights. Destination. So, where's Disney World here? Destination airport. Destination airport, the airport's called like Orlando or Miami International Airport. There is no airport called Disney World. Airport called city state, I guess. Okay. So, I guess the customer would have to like find the closest airport to Disney World, whether it's Miami Airport, Orlando Airport. Okay. Okay. Okay. So, here's some, so we came up with a quick design. We did some questions. Okay. So, now, next step is you want to normalize. Okay. So, we start in, you know, in first normal form. So, all the tables, all the attributes have one and only one value. Meaning, do we only have single values and no multivalues? Okay. So, each one of these, you know, contain, you know, single values and Okay. These are all single values. So, are we in first normal form? No, second normal. So, second normal form is the non-primary key attribute function dependent upon the primary key. Okay. So, what is my primary key? What's the primary key here? Flat number. Okay. So, this is an underline primary key. Okay. So, let's say what's the primary key here? Step ID. What's my primary key here? Step ID? Flat number. Here is none. Well, every table needs to have a primary key. Okay. Now, we haveâ€¦ I think we have to write assignment ID. We have to make it new because there is another table for staff where you have staff ID. What's the primary key in this table? Oh, yeah. We can make one staff assignment number or something. Well, I could always make a third one. But why can't we just use the two of these together to be a primary key? So, two of these together. So, this would prevent the same staff from being assigned to the same flight number. They're both the same ID. So, what's it called when we have two primary keys in one table? Composite primary key. Right. Composite primary key. What's my primary key here? Customer ID. Customer ID. And what's my primary key here? Seat ID. Seat ID. Well, it can't be the seat number because an airline, American Airlines, could have a thousand planes, and all of them will have a seat A1. So, a seat number can't be the primary key. How come flight number can't be the primary key? What if you have two customers on the same flight? So, this can't be the primary key. Why can't customer be the primary key? Customers can have multiple flights, maybe. Right. So, what's my primary key? All three. A composite of seat ID, flight number, and customer ID. So, seat ID and flight ID? You could. That gets a little bit complicated. Why don't we just call, like, a reservation ID? Okay. So, when you call customer service, they'll ask you, what's your reservation ID number, so they can bring it up. Rather than asking you, like, you know, what's your flight number, what's your customer ID, and what seat you're on, you just have one over here. Okay. How about airport? What's the primary key? Airport code. Right. It's airport code. What's my domain of airport code? What's the list of allowable values for airport code? In case you hadn't noticed, I'm doing a review. I'm doing a little bit of terminology. I'm integrating it in terms of solving a problem and creating a design. Domain. What's my domain of airport code? My JFK, MIA. JFK, Miami, LaGuardia, Newark Airport. So, this is the airport code. So, all the airports in the world have a unique three-digit code, so they're all unique. We're basically for the database. Primary key. And then staff ID is my primary key here. And plane ID is the primary key here. Okay. Okay. Then we have some foreign keys. So, what are some foreign keys in flights? Flight number. Plane ID. Right, the plane ID. What else? Don't get hung up about the spelling of the attribute. What are some other foreign keys here? Maybe starting airport and destination airport. These should be present in airport, city, state, I guess. Well, starting airports, like LaGuardia, LGA, that's really the primary key in airport code down here. Oh, right. I just happened to call it a different name just to make it descriptive, you know, for us. And destination airport is also a foreign key going back to airport code. Just illustrating the primary key foreign keys don't necessarily have to be the same name, but they reference the same, you know, values. Okay. How about reservation? What are some foreign keys? Flight number. Okay, so flight number is a foreign key back up to here. What are some more foreign keys? Customer ID. Customer ID. Customer ID. That goes back up to? Passengers. Okay, passengers. Okay. We could have called this customers or passengers. And let's see. Okay. Again, we could always expand this, but this is good enough for now. Okay. So let's see if we're in second normal form. So our non-primary key attributes are everything else. So is starting airport function dependent upon flight number? Reach occurrence of flight number, there exists one and only one starting airport. True or false? True. True. Okay. In order to simplify it, let's assume everything is like a non-stop flight. You take off and you land. We're not doing, you know, you have a layover at a different city. Okay. Let's make that assumption. And how about destination airport? Is destination airport function dependent upon flight number? Reach occurrence of flight number, there exists one and only one destination airport. Yes. Yes. Assuming like a non-stop flight. Okay. Let's also continue. So plane ID. Is plane ID function dependent upon flight number? Reach occurrence of flight number, there exists one and only one plane. True or false? True. True. Okay. So flight is referring to one plane. So this could stay. Okay. How about the date of flight? Date. Is date of flight function dependent upon flight number? Reach occurrence of flight number, there exists one and only one date. Think carefully about this. Sometimes they do cancellation, so they have to assign again. Okay. Well, if it's canceled, then that will be a different flight. So is date of flight function dependent upon flight number? Reach occurrence for each flight number, there exists one and only one date of flight. True or false? If you pass the time zone, it can be same date. Correct. So you can, there are some flights you can take off on Tuesday in New York, fly to Korea, go through the time zone, and you could land on Monday. Is that possible? Yeah. Yes. Yes. So then there's really two dates of the flight. There's Tuesday and there's Monday. So come up with a better way of how to organize this. Rather than say the date of the flight, come up with some other way of tracking the dates. Having a time zone? Yeah. How about rather than have one date for the whole flight, do we really have one date or do we have multiple dates? We can do a starting date, landing date. So how about either date of departure, right? That's the better word, by the way. In airline terminology, we don't call it starting airport. We call it departure airport. That's the word I was looking for, departure airport. So you have date of departure. Give me another word. Date of arrival. Right. Date of landing? Arrival. Oh, arrival. I like that. Now you're on a roll. All right. Date of arrival. So would you take arrival airport or destination airport? Usually arrival location. Right. Okay. So you have departure or arrival. Good. Now we're cooking here. So date of departure could be on Tuesday. Date of arrival could be on Monday because the earth is round and we have certain scenarios here. So this allows us to all be in second normal form if we do this. So I'm just going to change this. So date of departure, date of arrival. Okay. Cleaning this thing up here. Okay. Customer first, customer last. This function is dependent upon customer ID. I'm just going to add, give me some additional security requirements that, you know, the Federal Aviation Administration and the U.S. government Homeland Security, that they require for passengers on flights. What else do we have to track here? ID, data bar. Correct. So they're going to ask you, like, date of birth and some type of, like, ID. Like a passport driver's license. Passport. And then there's going to be a photo on that. So you're going to have to have, you know, a passport and date of birth. Then to make it even more complicated, you're going to send this to the airline, like, you know, five, 10, 15, 30 days in advance. And then this is going to connect to some type of government database. And then they're going to have a listing of the name of the, you know, person. And then they're going to have the passport number. Okay. And then they're going to link your passport here to the passport here. And then the first and last name. And what's the status going to be on the government database? What are they matching for? You're making a reservation here. They're going to compare it to this government database. What are they looking for? Visa statements, I guess. Well, not really checking immigration. That's a different department. If the person is safe or not. Correct. So is this person on some type of, like, watch list? Meaning that if you were, you know, convicted of, like, you know, like, hijacking planes in the past, they don't typically want you to, like, travel on planes in the future. Okay. So they could have a status of, like, you know, do not fly. So then they could send a message up to here, like, cancel reservation. Or, you know, detain you at the airport. They can do all types of things. So notice how this connects to an external database. But, you know, that's expanding this a little bit too much here. Okay. But that's how it's really done. That's why they want this information. They don't like reservations to be done, like, two hours before the flight. That's, like, very suspicious. They want to have this done, like, you know, many, many days in advance. Okay. So how about this? So on the passenger table, the customer ID. So date of birth. Is date of birth function dependent upon customer ID? For each customer, there exists one and only one date of birth. True or false? True. Yes. What is there to be â€“ what is the hesitation? How many dates of birth do you have? One. One. So each customer ID has one and only one date of birth. That's it. You were born once. That's it. Okay. Then you have passport. Okay. So I'm referring to, like, a passport number. So is this â€“ for each customer ID, there exists one and only one passport. True or false? True. False. Think carefully about that. False. Why? You can have expired passport. Well, if you have an expired passport, then it's not really a passport because it's expired. It's the same passport number from different country. Correct. Some people â€“ some countries have an arrangement with the United States where you can hold passports from two countries. But when you make the reservation, how many passports are you going to provide? Like, one. Okay. So you're only giving one. Okay. So this will be function-dependent. Remember, there's no right or wrong answer. It's whatever, you know, rules they set up. Let's do reservation. Let's check for normalization. Okay. So let's say â€“ so we have reservation ID. Then we have flight number. Is flight number function-dependent upon reservation ID? For each occurrence of reservation ID, there exists one and only one flight. True or false? False because the person can have two flight numbers. So in what scenario would a reservation have two flight numbers, which is two planes? Two flights. Well, how about you have â€“ you're going to California and then you return from California. So you could make that argument, right? You could have like a â€“ you know, like a layover in a city. So one reservation could have multiple flights. So that's possible. So we could â€“ you know, we could pull this out. Let's assume for now we're just doing like nonstop flights, okay, just to keep it simple. How about customer ID? Is customer ID function-dependent upon flight reservation? For each reservation, there exists one and only one customer. False. Why? Because a flight can have multiple customers. Well, we're talking about your reservation ID. Your reservation ID is for how many customers? You call to make a reservation. True. True meaning? There's only one customer for a reservation. Okay. So what happens if a mother is booking reservations for the two children of the mother? Oh, yeah, you're right. How does the airline handle a parent booking seats for the children? Do the children get their own reservation number or do the children get the mother's reservation number? The mother's. No, they get their own. They get their own. Again â€“ They get their own. Right. There's no right or wrong answer. It's just the airline set it up where each human being that enters the plane that has the seat gets their own reservation number. There can be some other connector to say who's the guardian, the parent of who, but they want to say that this customer has their own reservation number. Okay. You may buy them all at the same time, okay, but they do it that way. Okay. Okay. Just doing a quick check here of second normal form. So normally you would obviously do all of them like in more detail. Okay. Okay. So let's start making some quick tables during our design here. So let's start with the â€“ where do you want to start? Which tables do you create first? Or rather, which tables do you want to create last? The more complex ones last. What's the definition of complex? The most RNT. Most what? I'm looking for the right database word here. Foreign keys. Foreign keys, meaning that flight needs to be last because it needs to have which other tables already created. I need to have the plane table created. I need to have the airport table created. I can't create flights until the airport is in planes, okay, and I can't create reservation until what's created? Customer and flights. So we're going to do these foreign keys like last. So now that we know what's last, give me a table that I can do first. Tables that don't have foreign keys. What are some tables that don't have foreign keys? Planes. Okay, let's start out with the planes, staff, airport, okay? So I'm connected. I'm using CS331, okay, and let's go to the end here. Okay, so help me out here. Create a table for planes. Give me a hint. Create tables. Planes. Give me some columns. Plane ID and manufacturer. Okay. What's my column type? Int and primary key. Okay. So why don't you finish up this table, and then we'll have somebody else do the next table. Manufacturer. That's it. Okay, so this would be like, you know, Boeing, Airbus. We could do 20. Okay. Let's say planes also, you want to keep track of the number of seats that are on the plane. So int. Okay, so I'm finished. Okay, so this has been created. Okay. Let's do the next one. Okay. So Thomas, Naeem, Nak, Mohammed, help me out here. Staff. Create tables. Keep going. Staff ID. Int primary key. Yeah, I'm waiting. Give me another constraint. No. Okay. Got a syntax error here. Where's my error? You put a period after ID. Period. There you go. Okay, that solves that problem. Okay, next table. Airport. Let's see. Mohammed, Nak, Aaron. Airport. Create table airport. Airport quote. Int primary key. City VARCHAR20. Not null. State VARCHAR2. Not null. Okay. Okay, so now we get to reservation. So we can't do reservation. How come? Because we didn't make the flight table yet. And? Customer. And customer ID. And passages. So let's do passages. Customer ID. I just had a thought here. Passengers. Is it possible to transport a dog on an airplane? Yes. Yes. Or is it passenger? Or is it dog cargo? Cargo. Okay. Because we used the word passages. I was going to say customer or passage. I just didn't know where. Okay. These thoughts go through my mind sometimes. Okay, so passages. Now what? I think if the passenger is blind, you can have a service dog as a passenger. Well, if you have a service dog, I think you could have a service dog, but I don't think the service dog is a passenger because you're not buying a ticket for the service dog. I think it's only a passenger if you pay for a ticket. Oh, okay. Again, that's my thoughts, okay? So give me some columns here. Customer ID. And primary key. What did I do with this? Date, not now. What am I entering for the passport? Am I entering a yes, no? Am I entering a number? What am I entering here? Should be number, passport number. Unique. So passport number. So what's my column type? Before you decide about that, ask yourself the question, am I doing a calculation on the passport number? Am I doing like 20% of the passport number? Am I adding 15 to it? So if you had said yes, then the column type would be what if you had said yes? Number. Number. Okay, I'm not doing a calculation on it. Is every digit significant? Yes. Can you have leading zeros? Yes. So therefore, my column type is what? Bar chart. Bar chart. Bar chart. I would say, I don't know what the length is, but let's call it 50. And I'm not going to say not null, only because everybody might not have a passport number. You may have like a driver's license. You may have some other type of number. Okay. Okay, so I'm done with this. Okay. So let's go to, so let's start doing reservation. So can I do reservation? I didn't do flights yet. So I did flights, I have airports, and I have planes. So let's do flights. Okay, for bonus points, because we have foreign keys here. Who wants to give a crack at flights? You want to implement the foreign keys here in flights? Flight numbers and primary key. So flight number, primary key with the column type. Bar chart. So can flight numbers begin, do flight numbers have letters and numbers? Oh, yeah. Yes. Yeah. So it's okay. So I'll give you that. Okay. So let's say, I don't know, let's say seven. So let's say not null. Well, this is my primary key, right? The primary key. So primary key can be a text value. Okay, next. What's your airport? This has to be the same as what? The column type of this has to be the same as what? Airport code. Correct. What's wrong with this? I just noticed this. What's wrong with this airport code? We said before, what's our domain? Letter three. Right. So what's this here? Entity. A number. Right. So this should be a what? Character three. Okay, but this table is already created. So describe airport. So this is my table. It's already created. So what are your thoughts? I don't want this to be an integer. I want this to be a text value. I see two ways of fixing this. We could alter table. Alter. Okay, you can do an alter table. Or then we have no data entered. We could also do what? Drop. Maybe you could drop this table and just create it again. So we have a little flexibility here. We could do alter table or drop table. So we could say drop table. Be careful with this command because once you whack out the table, like, that's it. It's gone. Okay, so this table is gone. Now it's recreated. Give me a better column type for this. Char three. Char three. Now it's recreated again. Now it's created. So now departure airport will be char three. Should be the same. Let's say not now. Meaning I have to have a departure of airport. Otherwise there is no flight. We have a, what do we call it, arrival airport. And we have date of departure, date of arrival. Okay, and plane ID. Not now. Date. Okay, yeah, I could do that. So plane ID. Plane ID is what? Date of departure. Date of departure. Integer. The ID should be the same thing as up here. Integer. So integer. And then we also say flight status. Column type of this is what? Char char. Okay, but now I want to add my following keys. Foreign key departure airport. Okay, so now I want to add my foreign keys. Okay, so now I want to add my foreign keys. Okay, so now I want to add my foreign keys. So, I'm sorry, say that again. Foreign key departure underscore airport. So we're going through departure airport. So foreign key. So this is going to make reference to. References airport. References airport parentheses. Airport ID. References. Airport parentheses or code. For the table that contains this column. Oh, so this goes back up to. Yeah, yeah. Okay. And we also have what other. Brian key here. Foreign key arrival airport. References airport or code. Have another 1. Main ID. Which I write. Thank you. I think you misspell. You don't need. You think what online 134 says. So plain. So plain ID. References. Plains play 90. So, open, close parentheses. Open parentheses. Well, get that right. I usually get, like, a syntax error when I do that. Right. But get that right. 1st time. Okay. Okay. And finally, our last 1 was 1. Reservation. Reservation. So reservation will be. So, play number is 1. Should be up here or 7. In. Okay, help me with the foreign keys. Foreign key customer ID. Passengers. And 1 more. Right now. I. Let me show you something else. Since. Reservation makes reference to flight. As a foreign key. If I were to attempt to drop flights. What do you think would happen? It won't work. Why. Because you drop flights. How about if I drop planes? What kind of problem can I have if I drop planes or passengers? They're connected by foreign key. Correct. So the system will prevent you from dropping passengers here because passengers is referenced as a foreign key down here. So drop. Able. Passengers. And then it said, you know, can drop to that drop passenger table. And then it says, can I drop table passages referenced by a foreign key. So you kind of like locked in. So the only way to drop passengers. Do what first. We have to remove the foreign keys to drop passengers. Okay, so let's start adding some data. Really fast. So let's say so give me some syntax. I want to add data to my airport. Insert into what? Airport airport. Give me a row. Okay. Quotes, no quotes. Yes. Uppercase lowercase. The city. Okay. And state. Even everyone was equal syntax. What's my error? You didn't close the quote for anyone. Okay, so it added and. Actually, sorry that. Why are you always flushing? So I might type out. Why are you flushing? Okay, or Jamaica. Jamaica. Well, too late. Okay, so you have two airports. What would happen if I were to add another row? Another airport called LGA. I thought he said it's unique. So what would happen if I were to add another airport called LGA. Because it's primary. Let's see what happens. It says it can't because it's a duplicate entry. It's a primary key. There you go. So this is the advantage to having the primary keys. It prevents you from, you know, from doing that. Okay. And now if I were to say, you know, select, you know, star from. Airport. You know, is my two airports. Okay. And. Okay, so this is good enough today. So we'll pick up more. So to summarize here, the term and what we did today. In terms of, like, designing everything is that we identified the business requirements. What the, what the questions were. And we, you know, created. Initial tables. Then we, you know, performs. First normal form. Second normal form on tables. Identify, you know, you know, primary key and foreign. And we created. The tables using sequels. And implemented. You know, primary key constraints, primary key, foreign key. And, you know, I know. And then we added. Yeah. Okay. So what's left is just adding a few more data and then begin to answer our questions. So this flow that we're doing is like a typical design, like a structure that you would do. I do agree that an airline reservation system, like on an exam is like rather complicated. It's doable, but it's more of a project than an exam. But it's a good exercise because it has a lot of complicated scenarios. All right. So I'll stick around. I'll stop the recording. I'll stick around. People have questions about the project. So let me prioritize the questions about the project. Okay. Let me stop the recording.
